- platform: time_date
  display_options:
    - 'time'

- platform: integration
  name: energy_per_hour2
  unique_id: energy_per_hour2
  source: sensor.strommaler_power
  unit_prefix: k
- platform: integration
  name: panasonic_ac_2_consumption_kwh
  unique_id: panasonic_ac_2_consumption_kwh
  source: sensor.panasonic_ac_power_consumption
  unit_prefix: k
  method: left

- platform: derivative
  source: sensor.energy_per_hour2
  name: Derivert effekt
  round: 1
  unit_time: "h"
  time_window: "00:05:00"

- platform: energytariff
  entity_id: "sensor.strommaler_power"
  levels:
  - name: "Trinn 1: 0-2 kWh"
    threshold: 2
    price: 83
  - name: "Trinn 2: 2-5 kWh"
    threshold: 5
    price: 147
  - name: "Trinn 3: 5-10 kWh"
    threshold: 10
    price: 252
  - name: "Trinn 4: 10-15 kWh"
    threshold: 15
    price: 371
  - name: "Trinn 5: 15-20 kWh"
    threshold: 20
    price: 490

- platform: template
  sensors:
    azimuth:
      friendly_name: "Sun Azimuth"
      unit_of_measurement: 'degrees'
      value_template: "{{ state_attr('sun.sun', 'azimuth') }}"
    vaskerom_vvb_temp_corrected:
      friendly_name: "VVB temperatur justert"
      icon_template: mdi:coolant-temperature
      unit_of_measurement: 'Â°C'
      value_template: "{{ (states('sensor.vaskerom_vvb_air_temperature_2') | float(0) + 24.5) }}"
    vaskerom_vvb_watt_corrected:
      unit_of_measurement: 'W'
      friendly_name: 'VVB effekt justert'  
      icon_template: mdi:sine-wave  
      value_template: >-
        {% if is_state('switch.vaskerom_vvb', 'on') %}
          {% set corrected_watt = states('sensor.vaskerom_vvb_electric_consumption_w') | float(0) - 354.0 %}
          {% if corrected_watt > 25.0 %}
            {{ corrected_watt }}
          {% else %}
            0.0
          {% endif %}
        {% else %}
          0.0
        {% endif %}
#    estimated_hourly_consumption:
#      friendly_name: "Estimert Timeforbruk"
#      unit_of_measurement: 'kWh'
#      device_class: energy
#      value_template: "{{ (states('sensor.nygardsvegen_6_forbruk') | float(15) + states('sensor.derivert_effekt') | float(0) * (3600 - now().minute * 60 - now().second) / 3600) | round(3) }}"

#- platform: filter
#  name: "Estimated hourly consumption filtered"
#  entity_id: sensor.estimated_hourly_consumption
#  filters:
#    - filter: outlier
#      window_size: 4
#      radius: 0.25 #orignal 0.25
#    - filter: lowpass
#      time_constant: 4
#      precision: 3

- platform: systemmonitor
  resources:
    - type: memory_use_percent
    - type: processor_use
    - type: last_boot
    - type: load_15m
    - type: load_5m
    - type: load_1m
